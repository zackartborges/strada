{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zackborges/Desktop/strada/strada/src/components/Works.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport WorkItem from '../elements/WorkItem';\nimport works from '../data/Works';\n\nfunction Works() {\n  _s();\n\n  const [filter, setFilter] = useState('all');\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    setProjects(works);\n  }, []);\n  useEffect(() => {\n    setProjects([]);\n    let worksUpdated = [];\n\n    for (let i = 0; i < works.length; i++) {\n      if (filter !== 'all' && !works[i].category.includes('portfolio-hidden')) {\n        works[i].category = `${works[i].category} portfolio-hidden`;\n      }\n\n      if (filter === 'all') {\n        let mue = works[i].category.split(' ');\n        works[i].category = mue[0];\n      }\n\n      if (works[i].category.includes(filter)) {\n        works[i].category = filter;\n      }\n\n      worksUpdated.push(works[i]);\n    }\n\n    setProjects(worksUpdated);\n  }, [filter]);\n  const worksFilters = ['all', 'Interior', 'branding', 'strategy'];\n  const displayWorks = projects.map((item, i) => /*#__PURE__*/_jsxDEV(WorkItem, {\n    title: item.name,\n    category: item.category,\n    image: item.image,\n    id: item.id\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 52\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"portfolioSection\",\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid-small\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"anim-bot big-title\",\n        children: [\"We're proud of our work \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 76\n        }, this), \" because we always give the best.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav portfolio-nav anim-bot\",\n        children: worksFilters.map((item, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n          className: `nav-item ${filter === item ? 'active' : null}`,\n          onClick: () => setFilter(item),\n          children: item\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 52\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row portfolio-row anim-bot-big\",\n        children: displayWorks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Works, \"4ietPxxTkm2Qb4mPaCJQzbscpfk=\");\n\n_c = Works;\nexport default Works;\n\nvar _c;\n\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"sources":["/Users/zackborges/Desktop/strada/strada/src/components/Works.js"],"names":["React","useState","useEffect","WorkItem","works","Works","filter","setFilter","projects","setProjects","worksUpdated","i","length","category","includes","mue","split","push","worksFilters","displayWorks","map","item","name","image","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport WorkItem from '../elements/WorkItem'\n\nimport works from '../data/Works'\n\nfunction Works() {\n\n    const [filter, setFilter] = useState('all')\n    const [projects, setProjects] = useState([])\n\n    useEffect(() => {\n        setProjects(works)\n    }, []);\n\n    useEffect(() => {\n        setProjects([])\n        let worksUpdated = []\n        for(let i=0; i<works.length; i++){\n            if(filter !== 'all' && !works[i].category.includes('portfolio-hidden')){\n                works[i].category = `${works[i].category} portfolio-hidden`\n            }\n            if(filter === 'all'){\n                let mue = works[i].category.split(' ')\n                works[i].category = mue[0]\n            }\n            if(works[i].category.includes(filter)){\n                works[i].category = filter\n            }\n            worksUpdated.push(works[i])\n        }\n        setProjects(worksUpdated);\n    }, [filter]);\n\n    const worksFilters = ['all', 'Interior', 'branding', 'strategy']\n    const displayWorks = projects.map((item, i) => <WorkItem key={i} title={item.name} category={item.category} image={item.image} id={item.id}/>)\n\n    return(\n        <section id=\"portfolioSection\" className=\"section\">\n            <div className=\"container-fluid-small\">\n\n                <h2 className=\"anim-bot big-title\">We're proud of our work <br /> because we always give the best.</h2>\n\n                <nav className=\"nav portfolio-nav anim-bot\">\n                    {worksFilters.map((item, i) => <a key={i} className={`nav-item ${filter === item ? 'active' : null}`} onClick={() => setFilter(item)}>{item}</a>)}\n                </nav>\n\n                <div className=\"row portfolio-row anim-bot-big\">\n                    {displayWorks}\n                </div>\n\n            </div>\n        </section>\n    )\n\n}\n\nexport default Works"]},"metadata":{},"sourceType":"module"}